/* Autogenerated with kurento-module-creator */

#ifndef __PULSE_READER_INTERNAL_HPP__
#define __PULSE_READER_INTERNAL_HPP__

#include "PulseReader.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace pulsereader
{

class PulseReaderMethodSetOverlay
{
public:
  PulseReaderMethodSetOverlay() {}
  ~PulseReaderMethodSetOverlay() {}

  void invoke (std::shared_ptr<PulseReader> obj);
  void Serialize (JsonSerializer &serializer);

  bool getOverlaySet () {
    return overlaySet;
  }

  void setOverlaySet (bool overlaySet) {
    this->overlaySet = overlaySet;
  }

private:
  bool overlaySet;
};

class PulseReaderMethodSetId
{
public:
  PulseReaderMethodSetId() {}
  ~PulseReaderMethodSetId() {}

  void invoke (std::shared_ptr<PulseReader> obj);
  void Serialize (JsonSerializer &serializer);

  int getId () {
    return id;
  }

  void setId (int id) {
    this->id = id;
  }

private:
  int id;
};

class PulseReaderConstructor
{
public:
  PulseReaderConstructor () {}
  ~PulseReaderConstructor () {}

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

  int getId ();

  void setId (int id) {
    this->id = id;
    __isSetId = true;
    __isSetDefaultId = false;
  }

  bool getOverlay ();

  void setOverlay (bool overlay) {
    this->overlay = overlay;
    __isSetOverlay = true;
    __isSetDefaultOverlay = false;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
  int id;
  bool __isSetId = false;
  bool __isSetDefaultId = false;
  bool overlay;
  bool __isSetOverlay = false;
  bool __isSetDefaultOverlay = false;
};

} /* pulsereader */
} /* module */
} /* kurento */

#endif /*  __PULSE_READER_INTERNAL_HPP__ */
