/* Autogenerated with kurento-module-creator */

#include <gst/gst.h>
#include "MediaPipeline.hpp"
#include <PulseReaderImplFactory.hpp>
#include "PulseReaderImpl.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>
#include "MediaPipelineImpl.hpp"

#define GST_CAT_DEFAULT kurento_pulse_reader_impl
GST_DEBUG_CATEGORY_STATIC (GST_CAT_DEFAULT);
#define GST_DEFAULT_NAME "KurentoPulseReaderImpl"

namespace kurento
{
namespace module
{
namespace pulsereader
{

PulseReaderImpl::PulseReaderImpl (const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline, bool overlay) : OpenCVFilterImpl (config, std::dynamic_pointer_cast<MediaPipelineImpl> (mediaPipeline) )

{
}

void PulseReaderImpl::setOverlay (bool overlaySet)
{
  PulseReaderOpenCVImpl::setOverlay (overlaySet);
}

MediaObjectImpl *
PulseReaderImplFactory::createObject (const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline, bool overlay) const
{
  return new PulseReaderImpl (config, mediaPipeline, overlay);
}

PulseReaderImpl::StaticConstructor PulseReaderImpl::staticConstructor;

PulseReaderImpl::StaticConstructor::StaticConstructor()
{
  GST_DEBUG_CATEGORY_INIT (GST_CAT_DEFAULT, GST_DEFAULT_NAME, 0,
                           GST_DEFAULT_NAME);
}

} /* pulsereader */
} /* module */
} /* kurento */
